#!/usr/bin/env php
<?php
declare(strict_types=1);

/**
 * MonkeysLegion CLI entry point.
 *
 * Installed globally in every project as `vendor/bin/ml`
 * and re-exported by the skeleton under `bin/ml`.
 */

// Attempt to locate Composer's autoloader in either the project or vendor path
$autoloadPaths = [
    __DIR__ . '/../vendor/autoload.php',    // skeleton `bin/ml`
    __DIR__ . '/../../../autoload.php',     // vendor `.../bin/ml`
];
$loaderFound = false;
foreach ($autoloadPaths as $path) {
    if (file_exists($path)) {
        require_once $path;
        $loaderFound = true;
        // Determine project root via autoloader location
        $vendorDir   = dirname($path);
        $projectRoot = dirname($vendorDir);
        define('ML_BASE_PATH', $projectRoot);
        break;
    }
}
if (! $loaderFound) {
    fwrite(STDERR, "Cannot locate Composer autoload.php.\n");
    exit(1);
}

// Build the DI container
$container = new MonkeysLegion\DI\ContainerBuilder()
    ->addDefinitions(require ML_BASE_PATH . '/config/app.php')
    ->build();

/*
|--------------------------------------------------------------------------
| Bootstrap the CLI kernel
|--------------------------------------------------------------------------
|
| Resolve the CliKernel, register commands, and delegate control
| to the command specified in argv[1] (or list commands if none).
|
*/

/** @var MonkeysLegion\Cli\CliKernel $kernel */
$kernel = $container->get(MonkeysLegion\Cli\CliKernel::class);
exit($kernel->run($argv));